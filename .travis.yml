language: c++

compiler:
- clang
- gcc

os:
- osx
- linux

env:
  - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Debug"
  - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Release"

matrix:
  include:
  - os: linux
    dist: trusty
    sudo: required
    compiler: clang
    env:
    - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Debug"
  - os: linux
    dist: trusty
    sudo: required
    compiler: clang
    env:
    - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Release"
  - os: linux
    dist: trusty
    sudo: required
    compiler: gcc
    env:
    - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Debug"
  - os: linux
    dist: trusty
    sudo: required
    compiler: gcc
    env:
    - OPTIONS="-DZF_LOG_EXAMPLES:bool=ON -DZF_LOG_TESTS:bool=ON -DCMAKE_BUILD_TYPE:string=Release"

install: true

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
    mkdir build.make && cd build.make && cmake ${OPTIONS} ..;
    fi
  
script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; 
    find . -name "CMakeLists.txt" -exec sed -i .bak -e "s/VERSION 3.2/VERSION 2.8/g" {} \;
    mkdir build.make && cd build.make && cmake ${OPTIONS} .. && cmake --build . && ctest --output-on-failure; 
    fi
 
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; 
    cmake --build . && ctest --output-on-failure; 
    fi
